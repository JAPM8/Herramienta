%% Código de creación de la base de datos, se debe obligatoriamente usar los datos ingresados en la creación de la base.
function sql_matlab_create_consolidado(password)
datasource = "toolbox";  %Conector OBDC instalado
username = "root";       %Usuario root de la base de datos, tiene todos los permisos
%%password = "2023";       %Contraseña asignada a la base de datos en su creación
conn = database(datasource,username,password);

% Createsconsolidado_strings = importdata('Creates_consolidado.sql', ';')
% query = strjoin(Createsconsolidado_strings);
% query= strsplit(query, ';')
% % load('Createsconsolidado_string.mat');
% for i  = 1:length(query)-1 %ECl split crea una celda extra
%     queryexe= strcat(query{i},';')
%     execute(conn,queryexe);    
% end

%% DROP Elimina lo existente con anterioridad corrase en caso se desee reiniciar la base de datos
querydrop{1} = 'DROP DATABASE IF EXISTS humana';                               %Eliminar base de datos si ya existe
querydrop{2} = 'DROP USER IF EXISTS resetpass';                                %Eliminar usuario resetpass si ya existe
querydrop{3} = 'DROP USER IF EXISTS admin';                                    %Eliminar usuarios si ya existe

for i  = 1:length(querydrop) 
    execute(conn, querydrop{i});    
end
%% CREATE database Crea la base de datos, en caso de que no exista
querycreate{1} = 'CREATE DATABASE IF NOT EXISTS humana';                        %Crear la base de datos humana
querycreate{2} = 'USE humana';                                                  %Utilizar la base de datos humana
for i  = 1:length(querycreate) 
    execute(conn, querycreate{i});    
end
%% CREATE Table pacientes 
querypac = ['CREATE TABLE IF NOT EXISTS pacientes(' ...
            'id_paciente varchar(20) NOT NULL, ' ...
            'nombre varchar(100),' ...
            'apellido varchar(100),'...
            'notas_confidenciales varchar(50),'...
            'sexo varchar(1) NOT NULL,'...
            'fecha_nacimiento date NOT NULL,'...
            'antecedentes text,'...
            'diagnostico text,'...
            'condicion varchar(10) NOT NULL,'...
            'primary key(id_paciente))'];
execute(conn,querypac);
%% CREATE Table pruebas
querypruebas = ['CREATE TABLE IF NOT EXISTS pruebas('...
                'id_prueba int NOT NULL auto_increment,'...
                'id_paciente varchar(20) NOT NULL,'...
                'fecha_prueba date NOT NULL,'...
                'hora_inicio time NOT NULL,'...
                'duracion int NOT NULL,'...
                'frecuencia int NOT NULL,'...
                'no_canales int NOT NULL,'...
                'prueba longblob NOT NULL,'...
                'primary key (id_prueba, id_paciente),'...
                'constraint fk_pruebas foreign key (id_paciente) ' ...
                'references pacientes(id_paciente))'];
execute(conn,querypruebas);
%% CREATE Table pruebas_datos (Esta tabla contiene una llave invisble)
querypruebas_datos{1} = 'set global sql_generate_invisible_primary_key=1';      %Activa la generacion de la llave invisble
querypruebas_datos{2} =['create table if not exists pruebas_datos('...
                        'id_prueba int NOT NULL,'...
                        'canal_1 float NOT NULL,'...'...
                        'canal_2 float NOT NULL,'...
                        'canal_3 float NOT NULL,'...
                        'canal_4 float NOT NULL,'...
                        'canal_5 float NOT NULL,'...
                        'canal_6 float NOT NULL,'...
                        'canal_7 float NOT NULL,'...
                        'canal_8 float NOT NULL,'...
                        'canal_9 float NOT NULL,'...
                        'canal_10 float NOT NULL,'...
                        'canal_11 float NOT NULL,'...
                        'canal_12 float NOT NULL,'...
                        'canal_13 float NOT NULL,'...
                        'canal_14 float NOT NULL,'...
                        'canal_15 float NOT NULL,'...
                        'canal_16 float NOT NULL,'...
                        'canal_17 float NOT NULL,'...
                        'canal_18 float NOT NULL,'...
                        'canal_19 float NOT NULL,'...
                        'canal_20 float NOT NULL,'...
                        'canal_21 float,'...
                        'canal_22 float,'...
                        'canal_23 float,'...
                        'canal_24 float,'...
                        'canal_25 float,'...
                        'canal_26 float,'...
                        'canal_27 float,'...
                        'canal_28 float,'...
                        'canal_29 float,'...
                        'canal_30 float,'...
                        'canal_31 float,'...
                        'canal_32 float,'...
                        'canal_33 float,'...
                        'canal_34 float,'...
                        'canal_35 float,'...
                        'constraint fk_pdatos foreign key (id_prueba)'...
                        'references pruebas(id_prueba)'...
                        ') ENGINE=InnoDB;'];

% querypruebas_datos{3} = ['ALTER TABLE pruebas_datos ' ...
%                          'ALTER COLUMN my_row_id SET VISIBLE'];
% 
% querypruebas_datos{4} = ['ALTER TABLE pruebas_datos ' ...
%                          'RENAME COLUMN my_row_id to id'];
% 
% querypruebas_datos{5} = ['ALTER TABLE pruebas_datos ' ...
%                          'ALTER COLUMN id SET INVISIBLE'];

querypruebas_datos{3} = 'set global sql_generate_invisible_primary_key=0';          

for i  = 1:length(querypruebas_datos) 
    execute(conn, querypruebas_datos{i});    
end

%% CREATE Table usuarios e insertar el usuario 'root'
queryusuarios{1} = ['CREATE TABLE IF NOT EXISTS usuarios('...
                    'usuario varchar(15),'...
                    'correo varchar(60),'...
                    'tipo varchar(15),'...
                    'admin_usuarios BOOLEAN,'...
                    'analizar_prueba BOOLEAN,'...
                    'ingreso_pacientes BOOLEAN,'...
                    'consulta_pacientes BOOLEAN,'...
                    'consulta_confidencial BOOLEAN,'...
                    'anotaciones_automaticas BOOLEAN,'...
                    'crear_algoritmo BOOLEAN,'...
                    'anotaciones_automaticas2 BOOLEAN,'...
                    'primer_login BOOLEAN,'...
                    'recuperar_contrasena BOOLEAN,'...
                    'primary key (usuario))'];

queryusuarios{2} = ['INSERT INTO humana.usuarios VALUES(''root'',' ...
                 ' ''men19673@uvg.edu.gt'','...
                 ' ''Super User'','...
                 ' ''1'','...  
                 ' ''1'','...
                 ' ''1'','...
                 ' ''1'','...
                 ' ''1'','...
                 ' ''1'','...
                 ' ''1'','...
                 ' ''1'','...
                 ' ''0'','...
                 ' ''1'');'];

queryusuarios{3} = ['INSERT INTO humana.usuarios VALUES(''admin'','...
                   ' ''men19673@uvg.edu.gt'','...
                   ' ''Super User'','...
                   ' ''1'','...  
                   ' ''1'','...
                   ' ''1'','...
                   ' ''1'','...
                   ' ''1'','...
                   ' ''1'','...
                   ' ''1'','...
                   ' ''1'','...
                   ' ''0'','...
                   ' ''1'');'];

queryusuarios{4} = 'CREATE USER IF NOT EXISTS admin;';
queryusuarios{5} = 'ALTER USER admin IDENTIFIED BY ''1234'';';
queryusuarios{6} = 'GRANT ALL PRIVILEGES ON humana.* TO admin WITH GRANT OPTION;';
queryusuarios{7} = 'GRANT ALL PRIVILEGES ON humana.* TO admin WITH GRANT OPTION;';
queryusuarios{8} = 'GRANT SELECT ON mysql.user TO admin WITH GRANT OPTION;';
queryusuarios{9} = 'GRANT CREATE USER ON *.* TO admin WITH GRANT OPTION;';
queryusuarios{10}= 'GRANT FILE ON *.* TO admin;';

for i = 1:length(queryusuarios)
    execute(conn, queryusuarios{i});
end

%% CREATE Table analisis
queryanalisis = ['CREATE TABLE IF NOT EXISTS analisis('...
                 'id_analisis int NOT NULL AUTO_INCREMENT,'...
                 'fecha date NOT NULL,'...
                 'realizado_por varchar(50) NOT NULL,'...
                 'notas varchar(50),'...
                 'id_prueba int NOT NULL,'...
                 'id_paciente varchar(20) NOT NULL, '...
                 'canales_utilizados varchar(50) NOT NULL,'... 
                 'PRIMARY KEY (id_analisis), '...
                 'CONSTRAINT fk_prueba_a FOREIGN KEY (id_prueba) '...
                 'REFERENCES pruebas(id_prueba), '...
                 'CONSTRAINT fk_paciente_a '...
                 'FOREIGN KEY (id_paciente) '...
                 'REFERENCES pruebas(id_paciente));'];
execute(conn, queryanalisis);

%% CREATE Table resultados_analisis

queryres_analisis = ['CREATE TABLE IF NOT EXISTS resultados_analisis('...
                     'id_resultados int NOT NULL AUTO_INCREMENT,'...
                     'id_analisis int NOT NULL,'...
                     'canal int NOT NULL,'...
                     'inicio_vector int NOT NULL,'...
                     'fin_vector int NOT NULL,'...
                     'clasificacion varchar(50) NOT NULL,'...
                     'primary key (id_resultados),'...
                     'constraint fk_analisis foreign key (id_analisis) '...
                     'references analisis(id_analisis));'];
execute(conn, queryres_analisis);

%% CREATE Table modelo
querymodelo = ['CREATE TABLE IF NOT EXISTS modelo('...
               'id_modelo int NOT NULL AUTO_INCREMENT,'...
               'fecha_modelo date NOT NULL,'...
               'realizado_por varchar(50) NOT NULL,'...
               'modelo_utilizado varchar(20) NOT NULL,'...
               'descripcion varchar(50), '...
               'notas varchar(50),'...
               'id_prueba int NOT NULL, '...
               'PRIMARY KEY (id_modelo), '...
               'CONSTRAINT fk_prueba FOREIGN KEY (id_prueba) '...
               'REFERENCES pruebas(id_prueba));'];
execute(conn, querymodelo);

%% CREATE Table resultados_modelo
queryres_modelo = ['CREATE TABLE IF NOT EXISTS resultados_modelo('...
                   'id int NOT NULL AUTO_INCREMENT,'...
                   'id_modelo int NOT NULL,'...
                   'mav float,'...
                   'zc int,'...
                   'type1_error int,'...
                   'type2_error int,'...
                   'Specificity float,'... 
                   'AUC float,'...
                   'AUC_Class varchar(10),'...
                   'MSE float,'...
                   'RMSE float,'...
                   'MAE float,'...
                   'R2 float,'...
                   'primary key (id),'...
                   'constraint fk_modelo foreign key (id_modelo)'...
                   'references modelo(id_modelo));'];
execute(conn, queryres_modelo);

%% CREATE Table config

queryconfig{1} = ['CREATE TABLE IF NOT EXISTS config('...
                   'correo varchar(500) NOT NULL,'...
                   'pass varchar(500) NOT NULL, '...
                   'asunto varchar(100) NOT NULL,'...
                   'mensaje_1 varchar(500) NOT NULL,'...
                   'mensaje_2 varchar(500) NOT NULL,'...
                   'server varchar(500) NOT NULL);'];

queryconfig{2} = ['INSERT INTO humana.config VALUES(' ...
                  ' ''eeganalysistoolbox@gmail.com'','...
                  ' ''uvg@2022'','...
                  ' ''EEG Analysis Toolbox - Recuperar contraseña'','...
                  ' ''->'','...
                  ' ''Puedes cambiarla en cualquier momento ' ...
                  'en la pantalla de configuracion despues ' ...
                  'de iniciar sesion.'','...
                  ' ''smtp.gmail.com'');'];

for i = 1:length(queryconfig)
    execute(conn, queryconfig{i});
end

%% ACTIVAR LA FUNCION DE IMPORTAR DATOS CON BULK INSER Y REINICAR BASE DE DATOS
queryact{1} = 'SET GLOBAL local_infile=1;';
queryact{2} = 'RESTART;';

for i = 1:length(queryact)
    execute(conn, queryact{i});
end
end